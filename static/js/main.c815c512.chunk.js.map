{"version":3,"sources":["components/imageGalleryItem/ImageGalleryItem.module.css","components/modal/Modal.module.css","components/imageGallery/ImageGallery.module.css","components/button/Button.module.css","components/loader/Loader.module.css","components/app/App.module.css","components/searchBar/SearchBar.module.css","components/services/Api.js","components/searchBar/SearchBar.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/button/Button.js","components/loader/Loader.js","components/modal/Modal.js","components/app/App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","KEY","getImages","a","query","page","get","res","data","console","log","SearchBar","state","searchQuery","handleChange","e","value","target","setState","handleSubmit","preventDefault","props","onSubmit","className","css","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autocomplete","autofocus","placeholder","onChange","Component","ImageGalleryItem","image","openModal","largeImage","alt","id","onClick","ImageGalleryItemImage","src","ImageGallery","images","map","webformatURL","tags","largeImageURL","Button","onHandleClickLoadMore","button","LoaderSpinner","loaderBox","color","height","width","Modal","closeModal","Overlay","App","isLoading","isOpenModal","fatchImages","then","hits","prevState","finally","prev","window","addEventListener","currentTarget","key","removeEventListener","prevProps","length","scrollTo","top","document","documentElement","scrollHeight","behavior","Loader","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c815c512.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__18xn0\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__193Xf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3zur2\",\"Modal\":\"Modal_Modal__JzWj5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2J8yT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__UUCg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderBox\":\"Loader_loaderBox__1DRRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__BDugx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__3nbAl\",\"SearchForm\":\"SearchBar_SearchForm__2hSsC\",\"SearchFormButton\":\"SearchBar_SearchFormButton__1ytoN\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__3fop5\",\"SearchFormInput\":\"SearchBar_SearchFormInput__3YIDb\"};","import axios from \"axios\";\naxios.defaults.baseURL = \"https://pixabay.com\";\n\nconst KEY = \"20731826-485a6ef4f9f6fa0c1feddacae\";\n\nexport const getImages = async (query = \"\", page = 1) => {\n  try {\n    const res = await axios.get(\n      `/api/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport css from \"./SearchBar.module.css\";\n\nclass SearchBar extends Component {\n  state = {\n    searchQuery: \"\",\n  };\n\n  handleChange = (e) => {\n    const { value } = e.target;\n    this.setState({ searchQuery: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: \"\" });\n  };\n\n  render() {\n    return (\n      <header className={css.SearchBar}>\n        <form className={css.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={css.SearchFormButton}>\n            <span className={css.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={css.SearchFormInput}\n            type=\"text\"\n            value={this.state.searchQuery}\n            autocomplete=\"off\"\n            autofocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport css from \"./ImageGalleryItem.module.css\";\n\nconst ImageGalleryItem = ({ image, openModal, largeImage, alt }) => {\n  return (\n    <li\n      className={css.ImageGalleryItem}\n      id={image.id}\n      onClick={() => openModal(largeImage, alt)}\n    >\n      <img className={css.ImageGalleryItemImage} src={image} alt={alt} />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n  largeImage: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../imageGalleryItem/ImageGalleryItem\";\n\nimport css from \"./ImageGallery.module.css\";\n\nconst ImageGallery = ({ images, openModal }) => {\n  return (\n    <ul className={css.ImageGallery}>\n      {images.map((image) => (\n        <ImageGalleryItem\n          image={image.webformatURL}\n          alt={image.tags}\n          key={image.id}\n          largeImage={image.largeImageURL}\n          openModal={openModal}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape([]).isRequired),\n  openModal: PropTypes.func.isRequired,\n};\n","import css from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onHandleClickLoadMore }) => {\n  return (\n    <>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={onHandleClickLoadMore}\n      >\n        Load more\n      </button>\n    </>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  onHandleClickLoadMore: PropTypes.func.isRequired,\n};\n","import css from \"./Loader.module.css\";\nimport Loader from \"react-loader-spinner\";\n\nconst LoaderSpinner = () => {\n  //other logic\n  return (\n    <div className={css.loaderBox}>\n      <Loader type=\"TailSpin\" color=\"#00BFFF\" height={50} width={50} />\n    </div>\n  );\n};\n\nexport default LoaderSpinner;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport css from \"./Modal.module.css\";\n\nconst Modal = ({ largeImage, alt, closeModal }) => {\n  return (\n    <div className={css.Overlay} onClick={closeModal}>\n      <div className={css.Modal}>\n        <img src={largeImage} alt={alt} />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  largeImage: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport { getImages } from \"../services/Api\";\n\nimport SearchBar from \"../searchBar/SearchBar\";\nimport ImageGallery from \"../imageGallery/ImageGallery\";\nimport Button from \"../button/Button\";\nimport LoaderSpinner from \"../loader/Loader\";\nimport Modal from \"../modal/Modal\";\n\nimport css from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    query: \"\",\n    isLoading: false,\n    isOpenModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { images, page, query } = this.state;\n\n    if (prevState.query !== query) {\n      this.fatchImages(query);\n      return;\n    }\n\n    if (prevState.page !== page) {\n      this.fatchImages(query, page);\n      return;\n    }\n\n    if (prevState.images !== images && prevState.images.length > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  fatchImages = (query, page = 1) => {\n    this.setState({ isLoading: true });\n    getImages(query, page)\n      .then((data) =>\n        page === 1\n          ? this.setState({\n              images: data.hits,\n              page: 1,\n            })\n          : this.setState((prevState) => ({\n              images: [...prevState.images, ...data.hits],\n            }))\n      )\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  onSubmit = (searchQuery) => {\n    this.setState({ query: searchQuery });\n  };\n\n  onHandleClickLoadMore = () => {\n    this.setState((prev) => ({ page: prev.page + 1 }));\n  };\n\n  openModal = (largeImage, alt) => {\n    this.setState({ isOpenModal: true, largeImage, alt });\n    window.addEventListener(\"keydown\", this.closeModal);\n  };\n\n  closeModal = (e) => {\n    if (e.target === e.currentTarget || e.key === \"Escape\") {\n      this.setState({ isOpenModal: false });\n      window.removeEventListener(\"keydown\", this.closeModal);\n    }\n  };\n\n  render() {\n    const { images, isLoading, largeImage, alt, isOpenModal } = this.state;\n\n    return (\n      <div className={css.App}>\n        <SearchBar onSubmit={this.onSubmit} />\n        <ImageGallery images={images} openModal={this.openModal} />\n\n        {isLoading && <LoaderSpinner />}\n\n        {images.length !== 0 && (\n          <Button onHandleClickLoadMore={this.onHandleClickLoadMore} />\n        )}\n\n        {isOpenModal && (\n          <Modal\n            largeImage={largeImage}\n            alt={alt}\n            closeModal={this.closeModal}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}